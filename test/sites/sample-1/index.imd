---
"template": "default"
---

### Welcome to the first sample for [Full Meta Jacket](https://github.com/indy/full-meta-jacket)

This first sample contains a single index.imd file. It's written in [imd](https://github.com/indy/imbue) format which is basically Markdown but with extra header information. We also have a layout template called ````default.html```` and a set of site specific variables in a file called ````_vars````

So the 3 relevent files in this example are:

1. index.imd
2. _layouts/default.html
3. _vars


#### index.imd

index.imd's header contains a single key-value pair which specifies the template to use:

    "template": "default"

(The header information always appears at the top of a file it begins and ends with three hyphens and the data itself is in JSON format)

You can view this template in ```_layouts/default.html``` 

The rest of the file is just regular Markdown format


__NOTE__: Any files or directories beginning with an underscore are assumed to be for Full Meta Jacket and won't be copied over when generating the final static site.

#### _layouts/default.html

default.html is the template file, it contains an empty header (although you can nest layouts, this will be shown in a later example). 

The rest of the file is normal html with a couple of marked up sections such as:

    <title>{{=: 'title' | printAsVarDecl }}</title>

<!-- if you're reading the index.imd file in your text editor the above line should read:   
             <title>{{= title }}</title> 
             
I've had to use the printAsVarDecl function to stop FMJ from expanding {{= title }} to Example 1           
-->

and 

    <section id="main_content" class="inner">
      {{=: 'content' | printAsVarDecl }}
    </section>


````content```` is a special variable and is used to indicate where in the template the main content will be inserted. In this example the content is going to be ````index.imd```` after it's been converted from Markdown to HTML.

All other variables are defined either in the headers of imd files or in ````_vars```` files. (So file specific variables go inside that file's header and directory specific variables go into a ````_vars```` file within that directory)

#### _vars

Full Meta Jacket looks for a file called ````_vars```` in all of the directories it processess. It's assumed that each ````_vars```` file consists of nothing but header information. The set of variables contained within a ````_vars```` files is then merged into any files within that directory. (And for nested directories we can recursively merge together all the ````_vars```` files in the parent directories)

In this example, we have a top level ````_vars```` file and it contains site specific variables.

### The End

There you have it, a simple example for Full Meta Jacket consisting of 3 files.

### Theme
The theme on this page is Slate by [Jason Costello](https://github.com/jsncostello) and was stolen from [http://matthewmccullough.github.com/git-workshop/](http://matthewmccullough.github.com/git-workshop/) (via the Github blog post: [instantly beautiful project pages](https://github.com/blog/1081-instantly-beautiful-project-pages))
